# Generated by Django 2.1 on 2018-09-28 00:38

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cataloger', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.TextField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('keywords', models.TextField()),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.TextField()),
                ('accessLevel', models.TextField()),
                ('bureauCode', models.TextField()),
                ('programCode', models.TextField()),
                ('license', models.TextField()),
                ('spatial', models.TextField()),
                ('temporal', models.TextField()),
                ('describedByType', models.TextField()),
                ('describedBy', models.TextField()),
                ('accrualPeriodicity', models.TextField(null=True)),
                ('conformsTo', models.TextField(null=True)),
                ('dataQuality', models.TextField(null=True)),
                ('isPartOf', models.TextField(null=True)),
                ('issued', models.TextField(null=True)),
                ('language', models.TextField(null=True)),
                ('landingPage', models.TextField(null=True)),
                ('primaryITInvestment', models.TextField(null=True)),
                ('references', models.TextField(null=True)),
                ('systemOfRecords', models.TextField(null=True)),
                ('theme', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.TextField()),
                ('accessURL', models.TextField()),
                ('conformsTo', models.TextField()),
                ('describedBy', models.TextField()),
                ('describedByType', models.TextField()),
                ('description', models.TextField()),
                ('downloadURL', models.TextField()),
                ('dformat', models.TextField()),
                ('mediaType', models.TextField()),
                ('title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.TextField()),
                ('office', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.DeleteModel(
            name='Greeting',
        ),
        migrations.AddField(
            model_name='dataset',
            name='distribution',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cataloger.Distribution'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='publisher',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cataloger.Profile'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='schema',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cataloger.Schema'),
        ),
    ]
